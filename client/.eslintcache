[{"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/index.js":"1","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/store.js":"2","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reportWebVitals.js":"3","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/App.js":"4","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/productReducers.js":"5","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/userReducers.js":"6","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/cartReducers.js":"7","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/orderReducer.js":"8","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Footer.js":"9","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/CartScreen.js":"10","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductScreen.js":"11","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/LoginScreen.js":"12","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProfileScreen.js":"13","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/RegisterScreen.js":"14","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ShippingScreen.js":"15","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/PaymentScreen.js":"16","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/UserEditScreen.js":"17","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/UserListScreen.js":"18","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/OrderScreen.js":"19","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductListScreen.js":"20","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/PlaceOrderScreen.js":"21","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductEditScreen.js":"22","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/OrderListScreen.js":"23","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/HomeScreen.js":"24","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Header.js":"25","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Message.js":"26","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Rating.js":"27","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/FormContainer.js":"28","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Loader.js":"29","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/SearchBox.js":"30","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Product.js":"31","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Paginate.js":"32","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/CheckoutSteps.js":"33","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/userConstants.js":"34","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/cartConstants.js":"35","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/productConstants.js":"36","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/orderConstants.js":"37","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/cartActions.js":"38","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/productActions.js":"39","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/orderActions.js":"40","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/userActions.js":"41"},{"size":385,"mtime":1610100219914,"results":"42","hashOfConfig":"43"},{"size":2265,"mtime":1610100219916,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1610100219915,"results":"45","hashOfConfig":"43"},{"size":2880,"mtime":1610100219902,"results":"46","hashOfConfig":"43"},{"size":3201,"mtime":1610100219915,"results":"47","hashOfConfig":"43"},{"size":3482,"mtime":1610100219915,"results":"48","hashOfConfig":"43"},{"size":1134,"mtime":1610100219915,"results":"49","hashOfConfig":"43"},{"size":3363,"mtime":1610100219915,"results":"50","hashOfConfig":"43"},{"size":347,"mtime":1610100219906,"results":"51","hashOfConfig":"43"},{"size":3544,"mtime":1610100219909,"results":"52","hashOfConfig":"43"},{"size":7512,"mtime":1610100219911,"results":"53","hashOfConfig":"43"},{"size":2161,"mtime":1610100219909,"results":"54","hashOfConfig":"43"},{"size":5334,"mtime":1610100219911,"results":"55","hashOfConfig":"43"},{"size":3111,"mtime":1610100219911,"results":"56","hashOfConfig":"43"},{"size":2523,"mtime":1610100219912,"results":"57","hashOfConfig":"43"},{"size":1764,"mtime":1610100219910,"results":"58","hashOfConfig":"43"},{"size":3127,"mtime":1610100219912,"results":"59","hashOfConfig":"43"},{"size":2725,"mtime":1610100219912,"results":"60","hashOfConfig":"43"},{"size":7390,"mtime":1610100219910,"results":"61","hashOfConfig":"43"},{"size":4013,"mtime":1610100219911,"results":"62","hashOfConfig":"43"},{"size":4712,"mtime":1610100219910,"results":"63","hashOfConfig":"43"},{"size":5981,"mtime":1610100219910,"results":"64","hashOfConfig":"43"},{"size":2485,"mtime":1610100219909,"results":"65","hashOfConfig":"43"},{"size":1336,"mtime":1610100219909,"results":"66","hashOfConfig":"43"},{"size":2628,"mtime":1610100219906,"results":"67","hashOfConfig":"43"},{"size":244,"mtime":1610100219907,"results":"68","hashOfConfig":"43"},{"size":1726,"mtime":1610100219908,"results":"69","hashOfConfig":"43"},{"size":336,"mtime":1610100219906,"results":"70","hashOfConfig":"43"},{"size":387,"mtime":1610100219907,"results":"71","hashOfConfig":"43"},{"size":747,"mtime":1610100219908,"results":"72","hashOfConfig":"43"},{"size":807,"mtime":1610100219908,"results":"73","hashOfConfig":"43"},{"size":756,"mtime":1610100219907,"results":"74","hashOfConfig":"43"},{"size":1249,"mtime":1610100219906,"results":"75","hashOfConfig":"43"},{"size":1503,"mtime":1610100219913,"results":"76","hashOfConfig":"43"},{"size":284,"mtime":1610100219913,"results":"77","hashOfConfig":"43"},{"size":1520,"mtime":1610100219913,"results":"78","hashOfConfig":"43"},{"size":1259,"mtime":1610100219913,"results":"79","hashOfConfig":"43"},{"size":1217,"mtime":1610100219903,"results":"80","hashOfConfig":"43"},{"size":4580,"mtime":1610100219904,"results":"81","hashOfConfig":"43"},{"size":5359,"mtime":1610100219903,"results":"82","hashOfConfig":"43"},{"size":6371,"mtime":1610100219904,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"14rqclg",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/index.js",[],["172","173"],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/store.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reportWebVitals.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/App.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/productReducers.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/userReducers.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/cartReducers.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/reducers/orderReducer.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Footer.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/CartScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductScreen.js",["174"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Image,\n  ListGroup,\n  Row,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Rating from \"../Rating\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../../actions/productActions\";\nimport Loader from \"../Loader\";\nimport Message from \"../Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../../constants/productConstants\";\n\nconst ProductScreen = ({ match, history }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: ${product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of stack\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block btn-info\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant=\"success\">\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type=\"submit\"\n                        variant=\"primary\"\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/LoginScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProfileScreen.js",["175"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../Message\";\nimport Loader from \"../Loader\";\nimport { getUserDetails, updateUserProfile } from \"../../actions/userActions\";\nimport { listMyOrders } from \"../../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/RegisterScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ShippingScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/PaymentScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/UserEditScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/UserListScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/OrderScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductListScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/PlaceOrderScreen.js",["176"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../Message\";\nimport CheckoutSteps from \"../../components/CheckoutSteps\";\nimport { Link } from \"react-router-dom\";\nimport { createOrder } from \"../../actions/orderActions\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  // calculate prices\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  cart.shippingPrice = addDecimals(cart.itemPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals((0.15 * cart.itemPrice).toFixed(2));\n  cart.totalPrice = (\n    Number(cart.itemPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemPrice: cart.itemPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <Fragment>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup.Item>\n            <h2>Shipping</h2>\n            <p>\n              <strong>Address:</strong> {cart.shippingAddress.address},{\" \"}\n              {cart.shippingAddress.city}, {cart.shippingAddress.postalCode},{\" \"}\n              {cart.shippingAddress.country}\n            </p>\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <strong>Method: </strong>\n            {cart.paymentMethod}\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {cart.cartItems.length === 0 ? (\n              <Message>Your Cart is Empty</Message>\n            ) : (\n              <ListGroup variant=\"flush\">\n                {cart.cartItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid rounded />\n                      </Col>\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={4}>\n                        {item.qty} x ${item.price} = ${item.qty * item.price}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summery</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block btn-info\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default PlaceOrderScreen;\n","/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/ProductEditScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/OrderListScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/screens/HomeScreen.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Header.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Message.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Rating.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/FormContainer.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Loader.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/SearchBox.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Product.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/Paginate.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/components/CheckoutSteps.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/userConstants.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/cartConstants.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/productConstants.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/constants/orderConstants.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/cartActions.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/productActions.js",[],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/orderActions.js",["177"],"import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from \"../constants/orderConstants\";\n\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n",["178","179"],"/Users/roman/Documents/appolo/examples/appolo-ecommerce/client/src/actions/userActions.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":20,"column":10,"nodeType":"186","messageId":"187","endLine":20,"endColumn":37},{"ruleId":"184","severity":1,"message":"188","line":20,"column":11,"nodeType":"186","messageId":"187","endLine":20,"endColumn":18},{"ruleId":"184","severity":1,"message":"189","line":1,"column":38,"nodeType":"186","messageId":"187","endLine":1,"endColumn":46},{"ruleId":"184","severity":1,"message":"190","line":22,"column":10,"nodeType":"186","messageId":"187","endLine":22,"endColumn":26},{"ruleId":"180","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'useState' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.",["193"],["194"],"no-global-assign","no-unsafe-negation"]